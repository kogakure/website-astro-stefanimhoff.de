---
// Cspell:words astro pagefind
import type { CollectionEntry } from 'astro:content';
type Journal = CollectionEntry<'journal'>;
import { getCollection } from 'astro:content';

import { formatPosts } from '../utils';

import GridLayout from '../layouts/GridLayout.astro';
import PageTitle from '../components/PageTitle.astro';
import JournalList from '../components/JournalList.astro';
import Tag from '../components/Tag.astro';

import { Content as Intro } from '../text/journal/intro.mdx';

import { mapping } from '../mdx-components';

const allPosts = await getCollection('journal', ({ data }: Journal) => !data.draft);
const formattedAllPosts = formatPosts(allPosts, {});

const uniqueTags = [...new Set(formattedAllPosts.map((entry) => entry.data.tags).flat())];
uniqueTags.sort((a, b) => a.localeCompare(b));

const title = 'Journal';
const description = 'I am writing essays about various topics in this Journal.';
---

<GridLayout title={title} description={description} grid="wide" class="grid" backLink="/" innerGrid>
	<PageTitle grid="wide" innerGrid>Journal</PageTitle>

	<article
		class="col-start-1 col-end-18 grid md:col-start-4 md:col-end-12 xl:col-start-5 xl:col-end-11"
		data-pagefind-ignore
	>
		<Intro components={mapping} />
	</article>
	<aside aria-label="Filter by tags" class="col-start-1 col-end-18 flex flex-wrap gap-y-3">
		{uniqueTags.map((tag) => <Tag href={`/tag/${tag}/`}>{tag}</Tag>)}
	</aside>
	<nav class="col-start-1 col-end-18" aria-label="Journal">
		<JournalList entries={formattedAllPosts} />
	</nav>
</GridLayout>
