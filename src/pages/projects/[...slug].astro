---
import type { CollectionEntry } from 'astro:content';
type Projects = CollectionEntry<'projects'>;
import { getCollection } from 'astro:content';

import { sortBySortKey } from '../../utils';

import GridLayout from '../../layouts/GridLayout.astro';
import PageTitle from '../../components/PageTitle.astro';

import { mapping } from '../../mdx-components';

import Pagination from '../../components/Pagination.astro';
import Tag from '../../components/Tag.astro';

export async function getStaticPaths() {
	const projectEntries: Projects[] = await getCollection(
		'projects',
		({ data }: Projects) => data.showcase === true
	);
	const numberOfPages = projectEntries.length;
	projectEntries.sort(sortBySortKey);

	return projectEntries.map((entry, index) => ({
		params: { slug: entry.slug },
		props: {
			entry,
			next:
				index + 1 === numberOfPages
					? { slug: null, data: null }
					: projectEntries[index + 1],
			prev: index === 0 ? {} : projectEntries[index - 1],
		},
	}));
}

const { entry, prev, next } = Astro.props;
const { Content } = await entry.render();

const title = entry.data.title;
const description = entry.data.intro || `The detail for project "${entry.data.title}"`;
---

<GridLayout title={title} description={description} grid="wide" innerGrid backLink="/projects/">
	<PageTitle slot="title">
		{entry.data.title}
	</PageTitle>

	<article class="project-content col-start-1 col-end-17 [&_img]:w-full">
		<div class="mbe-7">
			{entry.data.categories.map((category: string) => <Tag>{category}</Tag>)}
		</div>
		<Content components={mapping} />
	</article>

	<Pagination
		nextText={next.data?.title}
		nextUrl={next.slug && `/projects/${next.slug}`}
		previousText={prev.data?.title}
		previousUrl={prev.slug && `/projects/${prev.slug}`}
	/>
</GridLayout>
