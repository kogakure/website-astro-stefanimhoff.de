---
// Cspell:words astro subheadline backface flippable classnames
import cx from 'classnames';
import Subheadline from './Subheadline.astro';
import Text from './Text.astro';

interface Props {
	class?: string;
	color: string;
	title?: string;
	description?: string;
}

const { class: className, color, title, description, ...props } = Astro.props;

const classes = cx(
	'h-[100vw] max-h-[200px] w-full max-w-[300px] [perspective:500px]',
	{ 'cursor-pointer': description },
	className
);

const flipperClasses = cx(
	'relative transition-transform duration-500 ease-in-out [transform-style:preserve-3d]'
);

const cardClasses = cx(
	'absolute box-border h-[100vw] max-h-[200px] w-full max-w-[300px] rounded-25 bg-white shadow-book inline-start-0 block-start-0 [perspective:500px] [backface-visibility:hidden] dark:bg-black dark:border-[1px] dark:border-white/20'
);
---

<div class={classes} data-flippable={description ? 'true' : 'false'} {...props}>
	<div class={flipperClasses}>
		<div class={cx(cardClasses, 'z-10')} data-side="front">
			<div
				class="border-be-solid min-h-[5rem] bg-white border-be-[1px] border-be-black/20 rounded-bs-25 dark:bg-black dark:border-be-white/20"
				style={`background-color: ${color};`}
			>
			</div>
			<div class="h-full min-h-[6rem] pbe-7 pbs-6 pie-6 pis-6">
				{title && <Subheadline class="!text-[20px] !mbe-[8px]">{title}</Subheadline>}
				<Text class="m-0 font-mono text-[16px] text-black/40 dark:text-white/40">
					{color}
				</Text>
			</div>
		</div>
		{
			description && (
				<div
					class={cx(cardClasses, 'plb-7 pli-6 [transform:rotateY(180deg)]')}
					data-side="back"
				>
					<Text class="text-[15px]">{description}</Text>
				</div>
			)
		}
	</div>
</div>

<script>
	document.addEventListener('DOMContentLoaded', () => {
		const flippableCards = document.querySelectorAll('[data-flippable="true"]');

		flippableCards.forEach((card) => {
			card.addEventListener('click', () => {
				card.classList.toggle('flipped');
			});
		});
	});
</script>

<style>
	[data-flippable='true'] .relative {
		transition: transform 0.5s;
		transform-style: preserve-3d;
	}

	[data-flippable='true'].flipped .relative {
		transform: rotateY(180deg);
	}
</style>
