---
import '../styles/sal.css';
---

<script src="/assets/scripts/sal.js" defer></script>
<script>
	import Swup from 'swup';
	import SwupFadeTheme from '@swup/fade-theme';
	import SwupHeadPlugin from '@swup/head-plugin';
	import SwupA11yPlugin from '@swup/a11y-plugin';
	import SwupPreloadPlugin from '@swup/preload-plugin';
	import SwupScrollPlugin from '@swup/scroll-plugin';
	import SwupScriptsPlugin from '@swup/scripts-plugin';

	declare const sal: any;

	const hasWindow =
		'querySelector' in document && 'localStorage' in window && 'addEventListener' in window;

	const swup = new Swup({
		containers: ['#swup'],
		plugins: [
			new SwupFadeTheme(),
			new SwupHeadPlugin(),
			new SwupA11yPlugin(),
			new SwupPreloadPlugin(),
			new SwupScriptsPlugin({
				head: true,
				body: true,
			}),
			new SwupScrollPlugin({
				doScrollingRightAway: true,
				animateScroll: false,
				scrollFriction: 0.3,
				scrollAcceleration: 0.04,
			}),
		],
	});

	if (hasWindow) {
		if (typeof sal !== 'undefined') {
			sal({
				threshold: 0.1,
			});
		}
	}

	// Register scripts after swup page transition
	swup.hooks.on('page:view', () => {
		setActiveLink();
		setUpLink();
		setEmailLink();
		setSearchModalLink();
		setSearchLink();
	});

	swup.hooks.on('visit:end', () => {
		if (typeof sal !== 'undefined') {
			sal({
				threshold: 0.1,
			});
		}
	});

	function setActiveLink() {
		const links = document.querySelectorAll('.navigation a');
		const currentPath = window.location.pathname;

		links.forEach((link) => {
			if (link.getAttribute('href') === currentPath) {
				link.classList.add('is-active');
			} else {
				link.classList.remove('is-active');
			}
		});
	}

	function setUpLink() {
		const button = document.getElementById('up-link');
		button?.addEventListener('click', (event) => {
			event.preventDefault();
			window.scrollTo({
				top: 0,
				left: 0,
				behavior: 'smooth',
			});
		});
	}

	function setSearchLink() {
		const body = document.body;
		const dialog = document.querySelector('dialog');
		const openDialogLink = document.getElementById('search-link');
		const closeDialogLink = document.getElementById('close-search');

		dialog?.addEventListener('close', () => {
			body.style.overflow = 'auto';
		});

		openDialogLink?.addEventListener('click', (event) => {
			const searchInput = dialog?.querySelector('input');
			event.preventDefault();
			dialog?.showModal();
			searchInput?.focus();
			body.style.overflow = 'hidden';
		});

		closeDialogLink?.addEventListener('click', (event) => {
			event.preventDefault();
			if (!dialog?.classList.contains('hide')) {
				dialog?.classList.add('hide');
				dialog?.addEventListener(
					'animationend',
					(animationEvent) => {
						if (animationEvent.animationName === 'hide-modal') {
							dialog?.close();
							dialog?.classList.remove('hide');
						}
					},
					{ once: true }
				);
			}
		});

		document.addEventListener('keydown', (event) => {
			if (event.key === '/') {
				const searchInput = dialog?.querySelector('input');
				event.preventDefault();
				dialog?.showModal();
				searchInput?.focus();
				body.style.overflow = 'hidden';
			}
		});
	}

	function setSearchModalLink() {
		const dialog = document.querySelector('dialog');

		dialog?.addEventListener('click', (event) => {
			if (event.target === dialog) {
				if (!dialog.classList.contains('hide')) {
					dialog.classList.add('hide');
					dialog.addEventListener(
						'animationend',
						(animationEvent) => {
							if (animationEvent.animationName === 'hide-modal') {
								dialog.close();
								dialog.classList.remove('hide');
							}
						},
						{ once: true }
					);
				}
			}
		});
	}

	function handleEmailClick(event: Event) {
		event.preventDefault();
		const currentTarget = event.currentTarget;
		if (currentTarget instanceof HTMLElement) {
			const { name, domain, tld } = currentTarget.dataset;
			if (name && domain && tld) {
				const mailto = `mailto:${name}@${domain}.${tld}`;
				window.open(mailto, '_blank');
			}
		}
	}

	function setEmailLink() {
		const links = document.querySelectorAll('[data-email-link]');

		links.forEach((link) => {
			link.addEventListener('click', handleEmailClick);
		});
	}

	setActiveLink();
	setUpLink();
	setEmailLink();
	setSearchLink();
	setSearchModalLink();
</script>

<style is:global>
	.no-js [data-sal|='fade'] {
		opacity: 1;
	}

	.no-js [data-sal|='slide'],
	.no-js [data-sal|='zoom'] {
		opacity: 1;
		transform: none;
	}

	.no-js [data-sal|='flip'] {
		transform: none;
	}
</style>
